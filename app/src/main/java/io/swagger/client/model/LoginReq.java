/**
 * Kiosk API
 * 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class LoginReq  {
  
  @SerializedName("account_id")
  private String accountId = null;
  @SerializedName("passwd")
  private String passwd = null;
  @SerializedName("push_token")
  private String pushToken = null;

  /**
   * login id
   **/
  @ApiModelProperty(value = "login id")
  public String getAccountId() {
    return accountId;
  }
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  /**
   * login passward
   **/
  @ApiModelProperty(value = "login passward")
  public String getPasswd() {
    return passwd;
  }
  public void setPasswd(String passwd) {
    this.passwd = passwd;
  }

  /**
   * firebase token
   **/
  @ApiModelProperty(value = "firebase token")
  public String getPushToken() {
    return pushToken;
  }
  public void setPushToken(String pushToken) {
    this.pushToken = pushToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginReq loginReq = (LoginReq) o;
    return (accountId == null ? loginReq.accountId == null : accountId.equals(loginReq.accountId)) &&
        (passwd == null ? loginReq.passwd == null : passwd.equals(loginReq.passwd)) &&
        (pushToken == null ? loginReq.pushToken == null : pushToken.equals(loginReq.pushToken));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (accountId == null ? 0: accountId.hashCode());
    result = 31 * result + (passwd == null ? 0: passwd.hashCode());
    result = 31 * result + (pushToken == null ? 0: pushToken.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginReq {\n");
    
    sb.append("  accountId: ").append(accountId).append("\n");
    sb.append("  passwd: ").append(passwd).append("\n");
    sb.append("  pushToken: ").append(pushToken).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
